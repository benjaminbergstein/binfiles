#!/bin/sh

SOURCE_DIR=$HOME/src

set +ev

app () {
  app=$1
}

window () {
  window=$1
  command=$2

  if [ "$init" != "1" ]
  then
    tmux new -d -s $app -n $window
    init="1"

    if [ ! -z "$command" ]
    then
      send "$command"
    fi
  else
    if [ ! -z "$command" ]
    then
      tmux new-window -n $window -t $app:$pane_name "$command"
    else
      tmux new-window -n $window -t $app:$pane_name
    fi
  fi
}

send () {
  command=$1
  pane=$2

  if [ ! -z "$pane" ]
  then
    target=$app:$window.$pane
  else
    target=$app:$window
  fi

  tmux send -t $target "$command" ENTER
}

command () {
  command=$1
  if [ ! -z "$command" ]
  then
    tmux new-window -n $window -t $app:$pane_name "$command"
  else
    tmux new-window -n $window -t $app:$pane_name
  fi
}

focus () {
  pane=$1
  tmux select-pane -t $app:$pane
  tmux resize-pane -t $app:$pane -Z
}

start_config () {
  cd ~/.bin

  app config

  window editor "editor dv"

  cd -
}

split () {
  command=$1
  tmux split-pane -t $app:$window.0
  send "$command" 1
}

start_airstream() {
  cd $SOURCE_DIR/airstream

  app airstream

  # Open new window for server
  window server "yarn dev"

  # Open new window with editor
  window editor "vim ."

  # Start typechecker in split pane
  split "yarn tsc --watch"

  # Open new window with editor
  window lint

  # Focus editor pane and resize to hide typechecker
  focus editor.0

  cd -
}

start_pocketknife() {
  cd $SOURCE_DIR/pocketknife

  # Open new window for server
  app pocketknife

  # Start dev server
  window app "cd pocketknife-app && yarn start"

  # Start ios in a different pane
  split "cd pocketknife-app && yarn ios:local"

  # Open new window with editor
  window editor "vim ."

  # Split editor pane in two
  # tmux split-pane -t pocketknife:editor.0

  # Open new window with editor
  # tmux new-window -n lint -t pocketknife:

  cd -
}

start_rails () {
  cd $SOURCE_DIR/hipcamp-reserve

  # Kill server if running
  destroy-port 3000

  # Open new window for server
  app rails

  # Start rails server
  window server "bundle && bundle exec rake db:migrate && bundle exec rails s"

  # Open new window for console
  window console "rails c"

  # Open new window with editor
  window editor "vim ."

  # Open new window for rspec
  window rspec

  make -C config

  cd -
}

lint_airstream() {
  app airstream
  window=lint
  send "./script/lint.sh"
}

test_rails () {
  app rails
  window=rspec
  send "bundle exec rspec $@"
}

stop () {
  tmux kill-session -t $1
}

up() {
  start_rails
  start_airstream
  start_pocketknife
}

down() {
  stop rails
  stop airstream
  stop pocketknife
}

attach() {
  if [ ! -z "$2" ]
  then
    echo "$2"
    tmux select-window -t $1:$2
  fi
  tmux attach -t $1
}

command=$1
target=$2

if [ -z "$1" ]
then
  command="start"
fi
if [ -z "$2" ]
then
  target="rails"
fi

if [ "$command" = "up" ]
then
  up
elif [ "$command" = "down" ]
then
  down
elif [ "$command" = "into" ]
then
  start_$target
  attach $target $3
elif [ "$command" = "attach" ]
then
  attach $target $3
elif [ "$command" = "stop" ]
then
  stop $target
else
  shift
  shift
  ${command}_${target} $@
fi

#!/bin/sh

SOURCE_DIR=$HOME/src

set +ev

app () {
  app=$1
}

window () {
  window=$1
  command=$2

  if [ "$init" != "1" ]
  then
    tmux new -d -s $app -n $window
    init="1"

    if [ ! -z "$command" ]
    then
      send "$command"
    fi
  else
    if [ ! -z "$command" ]
    then
      tmux new-window -n $window -t $app:$pane_name "$command"
    else
      tmux new-window -n $window -t $app:$pane_name
    fi
  fi
}

send () {
  command=$1
  pane=$2

  if [ ! -z "$pane" ]
  then
    target=$app:$window.$pane
  else
    target=$app:$window
  fi

  tmux send -t $target "$command" ENTER
}

command () {
  command=$1
  if [ ! -z "$command" ]
  then
    tmux new-window -n $window -t $app:$pane_name "$command"
  else
    tmux new-window -n $window -t $app:$pane_name
  fi
}

focus () {
  window=$1
  pane=$2
  tmux select-window -t $app:$window
  tmux resize-pane -t $app:$window.$pane -Z
  tmux select-pane -t $app:$window.$pane
}

split () {
  window=$1
  command=$2
  tmux split-pane -t $app:$window.0
  send "$command" 1
}

test_rails () {
  app rails
  window=rspec
  send "bundle exec rspec $@"
}

stop () {
  tmux kill-session -t $1
}

get_apps_list () {
  get_config '.apps | keys | .[] | @json'
}

up() {
  while read app
  do
    dv start $(echo $app | xargs echo)
  done <<< "$(get_apps_list)"
}

down() {
  while read app
  do
    dv stop $(echo $app | xargs echo)
  done <<< "$(get_apps_list)"
}

attach() {
  if [ ! -z "$2" ]
  then
    echo "$2"
    tmux select-window -t $1:$2
  fi
  tmux attach -t $1
}

get_config () {
  cat ~/.config/dv/config.json | jq --raw-output "$1"
}

get_app_config () {
  get_config ".apps.${app}.$1"
}

run () {
  if [ -z "$app" ]
  then
    app $1
    shift
  fi
  init=1
  window_or_script=$1
  shift
  script=$1
  shift

  if [ -z "$script" ]
  then
    window=run
    script=$window_or_script
    command=$(get_app_config "scripts.$script")
    window run "$command $@"
  else
    window=$window_or_script
    command=$(get_app_config "scripts.$script")
    send "$command $@"
  fi


}

start () {
  app $1
  root=$(get_config ".srcDir")
  dir=$(get_app_config "dir")
  start_commands="start[] | @json"

  cd $root/$dir

  while read cmd
  do
    command_name=$(echo "$cmd" | jq --raw-output '.[0]')
    sub_command_name=$(echo "$cmd" | jq --raw-output '.[1]')
    args=$(echo "$cmd" | jq --raw-output '.[2:] | join(" ")')

    if [ "$command_name" = "exec" ]
    then
      $sub_command_name
    elif [ "$command_name" = "run" ]
    then
      run $sub_command_name "$args"
    else
      $command_name $sub_command_name "$args"
    fi
  done <<< "$(get_app_config "$start_commands")"

  cd -
}

command=$1
target=$2

if [ -z "$1" ]
then
  command="start"
fi

if [ "$command" = "up" ]
then
  up
elif [ "$command" = "down" ]
then
  down
elif [ "$command" = "into" ]
then
  start $target
  attach $target $3
elif [ "$command" = "attach" ]
then
  attach $target $3
else
  $@
fi
